from aiogram import Router, F

from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from states.custom_searching import CustomSearching

from keyboards.reply.back_or_skip_kb import back_or_skip_kb

from utils.validations.valid_country import valid_country


router = Router(name=__name__)


@router.message(CustomSearching.country, F.text == "üö´ –ù–∞–∑–∞–¥ üö´")
async def custom_searching_country_back(message: Message, state: FSMContext):
    await state.set_state(CustomSearching.age_rating)
    await message.answer(
        text="–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏–ª–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –∑–∞"
             "–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (6, 12-18).",
        reply_markup=back_or_skip_kb(),
    )


@router.message(CustomSearching.country, F.text == "‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è©")
async def custom_searching_country_skip(message: Message, state: FSMContext):
    await state.update_data(country=None)

    data = await state.get_data()

    if data["type_choice"] == "movie" or data["type_choice"] == None:
        await state.set_state(CustomSearching.movie_length)
        await message.answer(
            text="–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å–º–∞ –∏–ª–∏ –æ—Ç—Ä—ã–≤–æ–∫ –∑–∞"
                 "–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (120, 100-160).",
            reply_markup=back_or_skip_kb(),
        )

    elif data["type_choice"] == "tv-series":
        await state.set_state(CustomSearching.series_length)
        await message.answer(
            text="–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ä–∏–∏ –∏–ª–∏ –æ—Ç—Ä—ã–≤–æ–∫ –∑–∞"
                 "–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (40, 30-60).",
            reply_markup=back_or_skip_kb(),
        )


@router.message(CustomSearching.country, F.text.cast(valid_country).as_("country"))
async def custom_searching_country_skip(message: Message, state: FSMContext):
    await state.update_data(country=message.text)

    data = await state.get_data()

    if data["type_choice"] == "movie" or data["type_choice"] == None:
        await state.set_state(CustomSearching.movie_length)
        await message.answer(
            text="–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å–º–∞ –∏–ª–∏ –æ—Ç—Ä—ã–≤–æ–∫ –∑–∞"
                 "–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (120, 100-160).",
            reply_markup=back_or_skip_kb(),
        )

    elif data["type_choice"] == "tv-series":
        await state.set_state(CustomSearching.series_length)
        await message.answer(
            text="–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ä–∏–∏ –∏–ª–∏ –æ—Ç—Ä—ã–≤–æ–∫ –∑–∞"
                 "–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (40, 30-60).",
            reply_markup=back_or_skip_kb(),
        )


@router.message(CustomSearching.country)
async def custom_searching_country_none(message: Message):
    await message.answer(
        text="–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª üòî. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —á—Ç–æ –±—ã –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏"
             "—Å—Ç—Ä–∞–Ω—É(—ã) –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –≤ —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø–æ–∏—Å–∫.",
        reply_markup=back_or_skip_kb(),
    )
