from aiogram import Router, F

from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from states.random_film_serial import RandomFilmSerial
from states.main_menu import MainMenu

from keyboards.reply.history_search_kb import history_search_kb
from keyboards.reply.back_kb import back_kb
from keyboards.reply.choose_criteries_kb import choose_criteries_kb

from utils.validations.valid_choose_in_type import valid_choose_in_type


router = Router(name=__name__)


@router.message(RandomFilmSerial.type_choice, F.text == "üö´ –ù–∞–∑–∞–¥ üö´")
async def random_film_serial_type_choice_back(message: Message, state: FSMContext):
    await state.set_state(MainMenu.criteries)
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏:",
        reply_markup=choose_criteries_kb(),
    )


@router.message(RandomFilmSerial.type_choice, 
    F.text.cast(valid_choose_in_type).as_("type_choice"))
async def random_film_serial_type_choice(message: Message, state: FSMContext):
    await state.set_state(RandomFilmSerial.count)
    if message.text == "–§–∏–ª—å–º—ã":
        await state.update_data(type_choice="movie")
        await message.answer(
            text="–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å–º–æ–≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å.\n"
            "–ú–∞–∫—Å–∏–º—É–º - 5",
            reply_markup=back_kb(),
        )
    elif message.text == "–°–µ—Ä–∏–∞–ª—ã":
        await state.update_data(type_choice="tv-series")
        await message.answer(
            text="–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–∞–ª–æ–≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å.\n"
            "–ú–∞–∫—Å–∏–º—É–º - 5",
            reply_markup=back_kb(),
        )
    elif message.text == "–§–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã":
        await state.update_data(type_choice=None)
        await message.answer(
            text="–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å.\n"
            "–ú–∞–∫—Å–∏–º—É–º - 5",
            reply_markup=back_kb(),
        )
    


@router.message(RandomFilmSerial.type_choice)
async def random_film_serial_type_choice_none(message: Message):
    await message.answer(
        text="–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é üòî.\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏: —Ñ–∏–ª—å–º, —Å–µ—Ä–∏–∞–ª –∏–ª–∏ –≤—Å–µ –≤–º–µ—Å—Ç–µ!",
        reply_markup=history_search_kb(),
    )
