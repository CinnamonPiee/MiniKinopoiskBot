from aiogram import Router, F

from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from states.random_film_serial import RandomFilmSerial

from keyboards.reply.yes_no_back import yes_no_back
from keyboards.reply.back_or_skip_kb import back_or_skip_kb

from utils.validations.valid_years import valid_years


router = Router(name=__name__)


@router.message(RandomFilmSerial.year, F.text == "üö´ –ù–∞–∑–∞–¥ üö´")
async def random_film_serial_year_back(message: Message, state: FSMContext):
    await state.set_state(RandomFilmSerial.criteries_yes_or_no)
    await message.answer(
        text="–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø–æ–∏—Å–∫ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ?",
        reply_markup=yes_no_back(),
    )


@router.message(RandomFilmSerial.year, F.text == "‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è©")
async def random_film_serial_year_skip(message: Message, state: FSMContext):
    await state.update_data(year=None)
    await state.set_state(RandomFilmSerial.rating)
    await message.answer(
        text="–ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –∏–ª–∏ –æ—Ç—Ä—ã–≤–æ–∫ –∑–∞ –∫–æ—Ç–æ—Ä—ã–π\n"
             "—Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (7, 7.1, 8-9.4).\n"
             "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π - 1\n"
             "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π - 10",
        reply_markup=back_or_skip_kb(),
    )


@router.message(RandomFilmSerial.year, F.text.cast(valid_years).as_("year"))
async def random_film_serial_year_skip(message: Message, state: FSMContext):
    await state.update_data(year=message.text)
    await state.set_state(RandomFilmSerial.rating)
    await message.answer(
        text="–ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –∏–ª–∏ –æ—Ç—Ä—ã–≤–æ–∫ –∑–∞ –∫–æ—Ç–æ—Ä—ã–π\n"
             "—Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä (7, 7.1, 8-9.4).\n"
             "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π - 1\n"
             "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π - 10",
        reply_markup=back_or_skip_kb(),
    )


@router.message(RandomFilmSerial.year)
async def random_film_serial_year_none(message: Message):
    await message.answer(
        text="–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª üòî.\n"
             "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —á—Ç–æ –±—ã –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≥–æ–¥\n"
             "–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –≤ —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø–æ–∏—Å–∫.",
        reply_markup=back_or_skip_kb(),
    )
    