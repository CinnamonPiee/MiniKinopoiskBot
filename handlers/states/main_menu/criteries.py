from aiogram import Router, F

from aiogram.types import Message
from aiogram.fsm.state import default_state
from aiogram.fsm.context import FSMContext

from states import (
    main_menu,
    find_film_serial,
    random_film_serial,
    custom_searching
)

from keyboards.reply import (
    main_kb,
    choose_criteries_kb,
    back_kb,
    history_search_kb
)


router = Router(name=__name__)


@router.message(F.text == "üé¨ –§–∏–ª—å–º—ã / –°–µ—Ä–∏–∞–ª—ã üé•", default_state)
async def main_choose_start(message: Message, state: FSMContext):
    await state.set_state(main_menu.MainMenu.criteries)
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏.",
        reply_markup=choose_criteries_kb.choose_criteries_kb(),
    )


@router.message(main_menu.MainMenu.criteries, F.text == "üé¶ –ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º / —Å–µ—Ä–∏–∞–ª üé¶")
async def main_choose_find_film_serial(message: Message, state: FSMContext):
    await state.set_state(find_film_serial.FindFilmSerial.name)
    await message.answer(
        text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞.",
        reply_markup=back_kb.back_kb(),
        parse_mode=None,
    )


@router.message(main_menu.MainMenu.criteries, F.text == "#Ô∏è‚É£ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º / —Å–µ—Ä–∏–∞–ª #Ô∏è‚É£")
async def main_choose_random_film_serial(message: Message, state: FSMContext):
    await state.set_state(random_film_serial.RandomFilmSerial.type_choice)
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ.",
        reply_markup=history_search_kb.history_search_kb(),
        parse_mode=None,
    )


@router.message(main_menu.MainMenu.criteries, F.text == "üîÄ –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø–æ–∏—Å–∫ üîÄ")
async def main_choose_custom_searching(message: Message, state: FSMContext):
    await state.set_state(custom_searching.CustomSearching.type_choice)
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ (—Ñ–∏–ª—å–º, —Å–µ—Ä–∏–∞–ª –∏–ª–∏ –≤—Å–µ –≤–º–µ—Å—Ç–µ).",
        reply_markup=history_search_kb.history_search_kb(),
        parse_mode=None,
    )


@router.message(main_menu.MainMenu.criteries, F.text == "üö´ –ù–∞–∑–∞–¥ üö´")
async def main_choose_back(message: Message, state: FSMContext):
    await message.answer(
        text="–ú–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑... ü§∑",
        reply_markup=main_kb.main_kb(),
    )
    
    await state.clear()


@router.message(main_menu.MainMenu.criteries)
async def main_choose_none(message: Message):
    await message.answer(
        text="–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ ‚¨áÔ∏è!",
        reply_markup=choose_criteries_kb.choose_criteries_kb())
