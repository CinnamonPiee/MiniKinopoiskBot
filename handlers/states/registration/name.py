from aiogram import Router, F

from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from keyboards.reply.back_kb import back_kb
from keyboards.reply.login_registration_kb import login_registration_kb

from states.registration import Registration

from utils.validations.valid_name import valid_name


router = Router(name=__name__)


@router.message(Registration.name, F.text == "üö´ –ù–∞–∑–∞–¥ üö´")
async def registration_name_handler_back(message: Message, state: FSMContext):
    await state.set_state(Registration.login_registration)
    
    await message.answer(
        text="–í–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –±–æ—Ç–µ.",
        reply_markup=login_registration_kb(),
    )


@router.message(Registration.name, F.text.cast(valid_name).as_("name"))
async def registration_name_handler(message: Message, state: FSMContext):
    await state.set_state(Registration.password)
    await state.update_data(name=message.text)

    await message.answer(
        text="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å: \n"
             "1. –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã. \n"
             "2. –ù–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤. \n"
             "3. –ò–º–µ–µ—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É –∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É. \n"
             "–ü—Ä–∏–º–µ—Ä - Qwertyu123",
        reply_markup=back_kb(),
    )


@router.message(Registration.name)
async def registration_name_handler_none(message: Message):
    await message.answer(
        text="–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é. üòî\n"
             "–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à –ù–∏–∫–Ω–µ–π–º!",
        reply_markup=back_kb(),
        )

